{"version":3,"sources":["../../../src/test/response-factory.ts"],"sourcesContent":["import { Response } from '../response'\nimport { Request } from '../request'\nimport { requestFactory } from './request-factory'\nimport type { Headers } from '../types'\n\nexport interface ResponseFactoryArgs {\n  method?: string\n  host?: string\n  path?: string\n  request?: Request\n  status?: number\n  data?: string | Record<string, unknown>\n  headers?: Headers\n  errors?: Array<Error | string>\n}\n\n/**\n * Create a response to use in tests\n * @returns Response\n */\nexport const responseFactory = ({\n  method = 'GET',\n  host = 'http://example.org',\n  path = '/path',\n  request = requestFactory({ method, host, path }),\n  status = 200,\n  data = {},\n  headers = {},\n  errors = [],\n}: ResponseFactoryArgs = {}) => {\n  let responseData\n  let contentType\n  if (typeof data === 'string') {\n    contentType = 'text/plain'\n    responseData = data\n  } else {\n    contentType = 'application/json'\n    responseData = JSON.stringify(data)\n  }\n\n  return new Response(\n    request,\n    status,\n    responseData,\n    { 'content-type': contentType, ...headers },\n    errors\n  )\n}\n"],"mappings":";AAAA,SAAS,gBAAgB;AAEzB,SAAS,sBAAsB;AAkBxB,IAAM,kBAAkB,CAAC;AAAA,EAC9B,SAAS;AAAA,EACT,OAAO;AAAA,EACP,OAAO;AAAA,EACP,UAAU,eAAe,EAAE,QAAQ,MAAM,KAAK,CAAC;AAAA,EAC/C,SAAS;AAAA,EACT,OAAO,CAAC;AAAA,EACR,UAAU,CAAC;AAAA,EACX,SAAS,CAAC;AACZ,IAAyB,CAAC,MAAM;AAC9B,MAAI;AACJ,MAAI;AACJ,MAAI,OAAO,SAAS,UAAU;AAC5B,kBAAc;AACd,mBAAe;AAAA,EACjB,OAAO;AACL,kBAAc;AACd,mBAAe,KAAK,UAAU,IAAI;AAAA,EACpC;AAEA,SAAO,IAAI;AAAA,IACT;AAAA,IACA;AAAA,IACA;AAAA,IACA,EAAE,gBAAgB,aAAa,GAAG,QAAQ;AAAA,IAC1C;AAAA,EACF;AACF;","names":[]}