export { configs, forge as default, forge, setContext } from './mappersmith.mjs';
import { ResourceTypeConstraint, ManifestOptions, GlobalConfigs } from './manifest.mjs';
export { A as AbortFn, C as Context, h as MethodDescriptor, i as MethodDescriptorParams, M as Middleware, c as MiddlewareDescriptor, d as MiddlewareParams, P as ParsedJSON, e as RenewFn, R as Request, a as RequestContext, f as RequestGetter, b as Response, g as ResponseGetter } from './index-s2Ddf-Na.mjs';
export { Auth as Authorization, Body, Hash, Headers, NestedParam, NestedParamArray, ParameterEncoderFn, Params as Parameters, Primitive, RequestParams } from './types.mjs';
export { default as Gateway } from './gateway/gateway.mjs';
export { default as FetchGateway } from './gateway/fetch.mjs';
export { default as HTTPGateway } from './gateway/http.mjs';
export { default as MockGateway } from './gateway/mock.mjs';
export { default as XhrGateway } from './gateway/xhr.mjs';
export { GatewayConfiguration, HTTPGatewayConfiguration, HTTPRequestParams } from './gateway/types.mjs';
export { AsyncFunction, AsyncFunctions, Client, default as ClientBuilder } from './client-builder.mjs';
export { version } from './version.mjs';

/**
 * @deprecated, use ManifestOptions instead
 */
type Options<Resources extends ResourceTypeConstraint> = ManifestOptions<Resources>;
/**
 * @deprecated, use GlobalConfigs instead
 */
type Configuration = GlobalConfigs;

export { type Configuration, GlobalConfigs, ManifestOptions, type Options, ResourceTypeConstraint };
